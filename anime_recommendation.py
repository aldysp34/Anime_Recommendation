# -*- coding: utf-8 -*-
"""Anime Recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-rj9c-LSe0peMQPr3vE6RXQ0lqP94p8i

Nama : Muhammad Aldi Surya Putra \
Asal : Universitas Pendidikan Indonesia

Anime Recommendation

# Mengambil dataset dari kaggle

## Menghubungkan colab dan kaggle
"""

! pip install -q kaggle
! cp kaggle.json ~/.kaggle/
! chmod 600 ~/.kaggle/kaggle.json

"""## Download dan unzip dataset"""

! kaggle datasets download -d CooperUnion/anime-recommendations-database
! unzip anime-recommendations-database.zip -d anime

# Import library yang dibutuhkan

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import matplotlib.pyplot as plt

"""# Data Exploratory"""

df = pd.read_csv('/content/anime/anime.csv')
df.head()

"""## Mengecek informasi terkait dataset"""

print("*Jumlah kolom dan index*")
print(f"Index : {df.shape[0]}\n Kolom : {df.shape[1]}")
print("\n")
print("*Kolom pada dataframe*")
print(df.columns)
print("\n")
print("*Info pada kolom*")
print(df.info())
print("\n")
print("*Info dataframe*")
print(df.describe())

"""# Data Preparation

## Mengatasi missing value pada dataset

### Jumlah missing value pada tiap kolom dataset
"""

print(df.isnull().sum())

"""### Drop data yang missing"""

df.dropna(inplace=True)

print(df.isnull().sum())

"""## Menghapus kolom - kolom yang tidak dibutuhkan"""

df.drop(['type', 'episodes', 'members'], axis=1, inplace=True)
df

"""## Sorting data berdasarkan 'anime_id'"""

df = df.sort_values('anime_id', ignore_index=True)

df

"""# Model Development

## Melakukan perhitungan IDF pada data kolom 'genre'
"""

vectorizer = TfidfVectorizer()
genre_name = vectorizer.fit(df['genre'])
genre_name.get_feature_names()

"""## Fit dan Transform kolom 'genre' menjadi vector"""

vectors = vectorizer.fit_transform(df['genre'])

"""## Mengubah vektor menjadi matriks"""

vectors.todense()

"""## Menghitung Cosine Similiarity pada matriks"""

cos_sim = cosine_similarity(vectors)

cos_sim.shape

"""## Membuat Dataframe yang berisi Cosine Similiarity tiap anime"""

cos_sim_df = pd.DataFrame(vectors.todense(),
             columns=genre_name.get_feature_names(),
             index=df.name
).sample(len(genre_name.get_feature_names()), axis=1).sample(10, axis=0)

cos_sim_df

"""## Membuat fungsi untuk mendapatkan rekomendasi anime"""

def anime_recommendations(animeName, similarity_data=cos_sim_df, items=df[['name', 'genre']], k=15):
    # Mengambil data dengan menggunakan argpartition 
    index = similarity_data.loc[:,animeName].to_numpy().argpartition(
        range(-1, -k, -1))
    
    # Mengambil data dengan similarity terbesar dari index yang ada
    closest = similarity_data.columns[index[-1:-(k+2):-1]]
 
    return pd.DataFrame(closest).merge(items).head(k)

"""# Testing Model

## Melihat hasil rekomendasi
"""

anime_recommendation(df, 'One Piece')

